1-Create a Networkpolicy That Denies All Access to the Maintenance Pod.
------------------------------------------------------------------------
kubectl create namespace foo
----------------------------
kubectl describe pod maintenance
------------------------------
vim np-maintenance.yml
------------------------------
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-maintenance
  namespace: foo
spec:
  podSelector:
    matchLabels:
      app: maintenance
  policyTypes:
  - Ingress
  - Egress
  ------------------------------------
  kubectl create -f np-maintenance.yml
  ------------------------------------
  
There is a pod called maintenance in the foo namespace. Create a NetworkPolicy that blocks all traffic to and from this pod.
2-Create a Networkpolicy That Allows All Pods in the Users-Backend Namespace to Communicate with Each Other Only on a Specific Port
There are some pods in the users-backend namespace. 
--------------------------------------------------------
kubectl label namespace users-backend app=users-backend
--------------------------------------------------------
3-Create a NetworkPolicy that blocks all traffic to pods in this namespace, except for traffic from pods in the same namespace on port 80.
---------------------------
vim np-users-backend-80.yml
----------------------------
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-users-backend-80
  namespace: users-backend
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app: users-backend
    ports:
    - protocol: TCP
      port: 80
-------------------------------------------------------
